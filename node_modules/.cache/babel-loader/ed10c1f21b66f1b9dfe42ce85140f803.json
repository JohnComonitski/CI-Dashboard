{"ast":null,"code":"var _jsxFileName = \"/Users/johncomonitski/Programming Projects/Dashboard2/Dashboard/src/pages/examples/Signin.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Container, Form, Card, Button } from '@themesberg/react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from \"../UserContext\";\nimport useScript from '../../hooks/useScript';\nimport { Routes } from \"../../routes\";\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\nexport default (props => {\n  const CLIENT_ID = '640109321718-hi3cr72v38sa783htp8ihbd84qh6i56p.apps.googleusercontent.com';\n  const DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\"];\n  const SCOPES = 'https://www.googleapis.com/auth/youtube.readonly';\n  const script = document.createElement('script');\n  const authorizeButton = document.getElementById(\"signInBtn\");\n  useEffect(() => {\n    //Setting up Google OAuth\n    useScript('https://apis.google.com/js/api.js');\n  }, []);\n\n  function handleClientLoad(props) {\n    console.log(\"hello\"); //console.log(props)\n    //gapi.load('client:auth2', initClient);\n  }\n\n  function initClient() {\n    /*\n    gapi.client.init({\n    discoveryDocs: DISCOVERY_DOCS,\n    clientId: CLIENT_ID,\n    scope: SCOPES\n    }).then(() => {\n    // Listen for sign state changes\n    gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n    // Handle initial sign in state\n    updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n    authorizeButton.onclick = handleAuthClick;\n    //signoutButton.onclick = handleSignouClick;\n    });*/\n  } // Handle Login\n\n\n  function handleAuthClick() {//gapi.auth2.getAuthInstance().signIn();\n  }\n\n  function updateSigninStatus(isSignedIn) {\n    if (isSignedIn) {//get Channel\n\n      /*\n      gapi.client.youtube.channels.list({\n        \"part\": [\n          \"snippet,contentDetails,statistics\"\n        ],\n        \"mine\": true\n      })\n      .then(async function(response) {\n          // Handle the results here (response.result has the parsed body).\n          var channel_id = response.result.items[0]['id'];\n          console.log(channel_id);\n           if(client.rowCount != 0)\n          {\n           }\n          else\n          {\n            //handleSignouClick();\n          }\n         },\n        function(err) { console.error(\"Execute error\", err); });\n        */\n    } else {\n      console.log(\"Not signed in\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Link, {\n    as: Link,\n    to: Routes.DashboardOverview.path,\n    className: \"text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faAngleLeft,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }), \" Back to homepage\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center form-bg-image\",\n    style: {\n      backgroundImage: `url(${BgImage})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"d-flex align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center text-md-center mb-4 mt-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, \"Sign in using YouTube\")), /*#__PURE__*/React.createElement(Form, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"signInBtn\",\n    variant: \"primary\",\n    type: \"submit\",\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Test\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    className: \"w-100\",\n    onClick: () => {\n      //Get the client ID and pass it on\n      var id = \"UCMUP9j-QidC_S0KLlO06uCg\"; //Check for ID, else fail\n\n      if (id == \"UCMUP9j-QidC_S0KLlO06uCg\") {\n        props.history.push({\n          pathname: Routes.DashboardOverview.path,\n          state: id\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, \"Login with Google\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3 mb-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fw-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, \"Welcome to the Creator Inventory dashboard. Enter by signing in with the Google account associated with your YouTube channel.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fw-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, \"View our\", /*#__PURE__*/React.createElement(Card.Link, {\n    as: Link,\n    to: \"https://creatorinventory.com/privacy/\",\n    className: \"fw-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, ` Privacy Policy `)))))))));\n});","map":{"version":3,"sources":["/Users/johncomonitski/Programming Projects/Dashboard2/Dashboard/src/pages/examples/Signin.js"],"names":["React","useContext","useEffect","FontAwesomeIcon","faAngleLeft","Col","Row","Container","Form","Card","Button","Link","UserContext","useScript","Routes","props","CLIENT_ID","DISCOVERY_DOCS","SCOPES","script","document","createElement","authorizeButton","getElementById","handleClientLoad","console","log","initClient","handleAuthClick","updateSigninStatus","isSignedIn","DashboardOverview","path","backgroundImage","BgImage","id","history","push","pathname","state"],"mappings":"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","sourcesContent":["\nimport React, { useContext, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Container, Form, Card, Button} from '@themesberg/react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from \"../UserContext\";\nimport useScript from '../../hooks/useScript';\n\nimport { Routes } from \"../../routes\";\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\n\n\n\nexport default (props) => {\n  const CLIENT_ID = '640109321718-hi3cr72v38sa783htp8ihbd84qh6i56p.apps.googleusercontent.com';\n  const DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\"];\n  const SCOPES = 'https://www.googleapis.com/auth/youtube.readonly';\n  const script = document.createElement('script');\n  const authorizeButton = document.getElementById(\"signInBtn\")\n  useEffect(() => {\n    //Setting up Google OAuth\n    useScript('https://apis.google.com/js/api.js');\n\n  }, []);\n\n  function handleClientLoad(props){\n    console.log(\"hello\")\n    //console.log(props)\n    //gapi.load('client:auth2', initClient);\n  }\n\n  function initClient(){\n    /*\n    gapi.client.init({\n  \t\tdiscoveryDocs: DISCOVERY_DOCS,\n  \t\tclientId: CLIENT_ID,\n  \t\tscope: SCOPES\n  \t}).then(() => {\n  \t\t// Listen for sign state changes\n  \t\tgapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n  \t\t// Handle initial sign in state\n  \t\tupdateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n  \t\tauthorizeButton.onclick = handleAuthClick;\n  \t\t//signoutButton.onclick = handleSignouClick;\n  \t});*/\n  }\n\n  // Handle Login\n  function handleAuthClick(){\n  \t//gapi.auth2.getAuthInstance().signIn();\n  }\n\n  function updateSigninStatus(isSignedIn){\n  \tif(isSignedIn){\n      //get Channel\n      /*\n      gapi.client.youtube.channels.list({\n        \"part\": [\n          \"snippet,contentDetails,statistics\"\n        ],\n        \"mine\": true\n      })\n      .then(async function(response) {\n          // Handle the results here (response.result has the parsed body).\n          var channel_id = response.result.items[0]['id'];\n          console.log(channel_id);\n\n          if(client.rowCount != 0)\n          {\n\n          }\n          else\n          {\n            //handleSignouClick();\n          }\n\n        },\n        function(err) { console.error(\"Execute error\", err); });\n        */\n  \t}\n    else{\n      console.log(\"Not signed in\");\n  \t}\n  }\n\n  return (\n    <main>\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n        <Container>\n          <p className=\"text-center\">\n            <Card.Link as={Link} to={Routes.DashboardOverview.path} className=\"text-gray-700\">\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to homepage\n            </Card.Link>\n          </p>\n          <Row className=\"justify-content-center form-bg-image\" style={{ backgroundImage: `url(${BgImage})` }}>\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                  <h3 className=\"mb-0\">Sign in using YouTube</h3>\n                </div>\n\n\n\n                <Form className=\"mt-4\">\n                <Button id=\"signInBtn\" variant=\"primary\" type=\"submit\" className=\"w-100\">\n                  Test\n                </Button>\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\" onClick={()=>{\n                    //Get the client ID and pass it on\n                    var id = \"UCMUP9j-QidC_S0KLlO06uCg\";\n\n                    //Check for ID, else fail\n                    if(id == \"UCMUP9j-QidC_S0KLlO06uCg\"){\n                      props.history.push({pathname: Routes.DashboardOverview.path, state: id});\n                    }\n                  }}>\n                    Login with Google\n                  </Button>\n                </Form>\n\n                <div className=\"mt-3 mb-4 text-center\">\n                  <span className=\"fw-normal\">Welcome to the Creator Inventory dashboard. Enter by signing in with the Google account associated with your YouTube channel.</span>\n                </div>\n\n                <div className=\"d-flex justify-content-center align-items-center mt-4\">\n                  <span className=\"fw-normal\">\n                    View our\n                    <Card.Link as={Link} to={\"https://creatorinventory.com/privacy/\"} className=\"fw-bold\">\n                      {` Privacy Policy `}\n                    </Card.Link>\n                  </span>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}