{"ast":null,"code":"var _jsxFileName = \"/Users/johncomonitski/Programming Projects/Dashboard2/Dashboard/src/components/Charts.js\";\nimport React from \"react\";\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\nexport const SalesValueChart = props => {\n  const {\n    data\n  } = props;\n  /*\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n  */\n\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: true,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: { ...options,\n      plugins\n    },\n    type: \"Line\",\n    className: \"ct-series-g ct-double-octave\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  });\n};\nexport const SalesValueChartphone = props => {\n  const {\n    data\n  } = props;\n  console.log(data);\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: false,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: { ...options,\n      plugins\n    },\n    type: \"Line\",\n    className: \"ct-series-g ct-major-tenth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  });\n};\nexport const CircleChart = props => {\n  const {\n    series = [],\n    donutWidth = 20\n  } = props;\n\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    donutWidth,\n    donut: true,\n    donutSolid: true,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: {\n      series\n    },\n    options: { ...options,\n      plugins\n    },\n    type: \"Pie\",\n    className: \"ct-golden-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  });\n};\nexport const BarChart = props => {\n  const {\n    labels = [],\n    series = [],\n    chartClassName = \"ct-golden-section\"\n  } = props;\n  const data = {\n    labels,\n    series\n  };\n  const options = {\n    low: 0,\n    showArea: true,\n    axisX: {\n      position: 'end'\n    },\n    axisY: {\n      showGrid: false,\n      showLabel: false,\n      offset: 0\n    }\n  };\n  const plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: { ...options,\n      plugins\n    },\n    type: \"Bar\",\n    className: chartClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["/Users/johncomonitski/Programming Projects/Dashboard2/Dashboard/src/components/Charts.js"],"names":["React","Chartist","ChartistTooltip","SalesValueChart","props","data","options","low","showArea","fullWidth","axisX","position","showGrid","axisY","showLabel","labelInterpolationFnc","value","plugins","SalesValueChartphone","console","log","CircleChart","series","donutWidth","sum","a","b","high","donut","donutSolid","Math","round","reduce","BarChart","labels","chartClassName","offset"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\n\nexport const SalesValueChart = (props) => {\n  const { data } = props;\n\n  /*\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n  */\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: true,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-double-octave\" />\n  );\n};\n\nexport const SalesValueChartphone = (props) => {\n  const { data } = props;\n\n  console.log(data)\n\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: false,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-major-tenth\" />\n  );\n};\n\nexport const CircleChart = (props) => {\n  const { series = [], donutWidth = 20 } = props;\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    donutWidth,\n    donut: true,\n    donutSolid: true,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`,\n  }\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={{ series }} options={{...options, plugins}} type=\"Pie\" className=\"ct-golden-section\" />\n  );\n};\n\nexport const BarChart = (props) => {\n  const { labels = [], series = [], chartClassName = \"ct-golden-section\" } = props;\n  const data = { labels, series };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    axisX: {\n      position: 'end'\n    },\n    axisY: {\n      showGrid: false,\n      showLabel: false,\n      offset: 0\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Bar\" className={chartClassName} />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}